Approach:
Perform a pre-order traversal (root, left, right).
Keep track of the maximum level visited so far.
For each node, if the current level is greater than the maximum level visited so far, then that node is part of the left view.

class Tree
{
    //Function to return list containing elements of left view of binary tree.
    ArrayList<Integer> leftView(Node root)
    {
        ArrayList<Integer> leftViewList = new ArrayList<>();
        int level = 0;
      // Your code here
 
      
      return solve(root, leftViewList, level);
    }
    
    ArrayList<Integer> solve(Node root, ArrayList leftViewList, int level) {
        if(root==null) {
            return leftViewList;
        }
        if(leftViewList.size() == level){
            leftViewList.add(root.data);
        }
        
        solve(root.left, leftViewList, level+1);
        solve(root.right, leftViewList, level+1);
        return leftViewList;
     }
    
}
